c
params[:settings]
params[:languages]
params[:played_lists]
params[:picked_lists]
params
game
c
games['count']
c
games['count']
games[:count]
games
games.count
c
games.count
gamecc
game
c
game.streaker = Legacy::FindPlayerService.new(game, streaker).perform
game
Legacy::FindPlayerService.new(game, streaker).perform
n
c
Legacy::FindPlayerService.new(game, streaker).perform
streaker
game.save
game.streaker_id = Legacy::FindPlayerService.new(game, streaker).perform[:id]
Legacy::FindPlayerService.new(game, streaker).perform[:id]
game.streaker = Legacy::FindPlayerService.new(game, streaker).perform
game[:streaker] = Legacy::FindPlayerService.new(game, streaker).perform
game
streaker
game.streaker = Legacy::FindPlayerService.new(game, streaker).perform
Legacy::FindPlayerService.new(game, streaker).perform
n
c
n
c
n
streaker
n
c
params[:streak][:player]
game
game[:streak]
game[:streak][:player]
c
@telegram_id
c
@telegram_id
c
@telegram_id
c
n
User.find_by_telegram_id(@telegram_id)
@telegram_id
c
n
c
@legacy_player
player
c
params[:players].each { |player| pp(player) }
params[:players].each { |player| pp(players) }
params[:players]
c
player
c
c\
user.players.find_by_game_id(@game.id)
@game.players
params = ActionController::Parameters.new(player).deep_transform_keys(&:underscore)
@telegram_id
players
player
c
n
game
n
c
n
games['data'].first['chat_id']
games
games.first
c
player
c
streaker
c
streaker.perform
streaker
c
env
n
c
n
self.categories
n
c
exc
n
c
exc
n
c
self
n
c
exc
n
c
error
n
c
n
c
self
self.language_id = english.id
self
self[:language_id] = english.id
self[:language] = english
self
english
Game.column_names
Game.language.class
self.language.class
self.language = english
c
exc
n
c
exc
n
c
self.language = english
self.language
english
c
exc
n
c
self
game
language = english
self.language = english
english
c
list
list['votes']
list['voters']
list[:voters]
vote
Legacy::FindTelegramUserService.new(vote[:voter].to_f).perform
c
params[:created_by]
list.errors
list[:id]
n
params.permit(List.new.permitted_attributes(:create))
params
n
params
n
List.find_by_legacy_id(list['_id']).nil?
n
List.find_by_legacy_id(list['_id']).nil?
n
List.find_by_legacy_id(list['_id']).nil?
list['_id']
c
params
list
list[:id]
list[:_id]
list
c
lists.count
"/tenthings/lists/#{list['_id']}"
c
list['_id']
list['_id'}
list[:_id]
"/tenthings/lists/#{list[:_id]}"
Legacy::ConnectionService.new.get("/tenthings/lists/#{list[:_id]}")
lists
list
c
n
list
n
lists
c
ListValue.all
c
test.errors
test = ListValue.create(value.permit(ListValue.new.permitted_attributes(:create)))
c
value
c
n
value.permit(ListValue.new.permitted_attributes(:create))
value
continue
